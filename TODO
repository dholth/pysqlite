======================
TODO list for pysqlite
======================

-----------
Open items:
-----------

Summary:        better error messages
Priority:       medium
Status:         open
Description:
    sqlite3_errmsg() should to be used in most places where the error message
    is constant now.

Summary:        import microprotocols from psycopg
Priority:       high
Status:         integrated, needs bugfixing and tests
Description:
    fog allowed me to reuse his microprotocols code from psycopg. He'll also
    relicense it under the zlib license so pysqlite can use it. This solves the
    conversion problem Python => SQLite

Summary:        .converters attribute of cursor
Priority:       high
Status:         open
Description:
    Type conversion SQLite => Pyhton. If pysqlite cannot detect the type, the
    user must tell it which type it is. Also if pysqlite would guess wrong, the
    user can force a certain typecast.

Summary:        cursor grows row factory
Priority:       low
Status:         open
Description:
    /

Summary:        Connection.cursor() grows a factory parameter
Priority:       low
Status:         open
Description:
    The cursor method of the connection object gets an optional cursor factory
    parameter for creating nonstandard cursor classes. One use-case is to
    create cursors where the returned rows are accessible by name instead of
    index.

-------------
Closed items:
-------------

Summary:        package renaming
Priority:       highest
Status:         finished 2004-11-26
Description:
    "import sqlite2" => "import pysqlite2.dbapi2 as sqlite". This involves many
    places that need changing.


